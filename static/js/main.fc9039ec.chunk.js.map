{"version":3,"sources":["Form.module.css","ContactListItem.js","ContactList.js","Filter.js","ContactForm.js","App.js","index.js"],"names":["module","exports","ContactListItem","id","name","number","onRemove","update","onUpdate","updatedClass","styles","updated","className","text","wrapper","itemLabel","type","checked","onChange","inputItem","onClick","ContactList","contacts","onRemoveContact","onUpdateContact","list","map","Filter","value","onChangeFilter","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","this","checkName","onSubmit","form","htmlFor","label","input","formButton","disabled","Component","uuidv4","require","v4","App","filter","addContact","contact","item","find","toLowerCase","alert","prevState","changeFilter","getVisibleContacts","includes","removeContact","idContact","updateContact","previousContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","container","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc9039ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__2TwcB\",\"form\":\"Form_form___HSsR\",\"label\":\"Form_label__3IuwS\",\"input\":\"Form_input__3zvxc\",\"formButton\":\"Form_formButton__3NsTc\",\"list\":\"Form_list__RSFrB\",\"text\":\"Form_text__-GohR\",\"wrapper\":\"Form_wrapper__3eAk0\",\"updated\":\"Form_updated__11vwP\",\"not-updated\":\"Form_not-updated__2uUT7\"};","import React from 'react';\r\nimport styles from './Form.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = function({id,name,number,onRemove,update,onUpdate}){\r\n\r\n  let updatedClass = update ? styles.updated : styles['not-updated'];\r\n\r\n  return (\r\n    <li key={id} className = {updatedClass}>\r\n      <span className = {styles.text}>{name}: {number}</span>\r\n\r\n      <div className = {styles.wrapper}>\r\n        <label id=\"delete\" className = {styles.itemLabel}>update</label>\r\n        <input type=\"checkbox\"\r\n        id = \"delete\"\r\n        checked = {update}\r\n        onChange = {onUpdate}\r\n        className = {styles.inputItem}/>\r\n\r\n        <button type=\"button\" onClick={onRemove}>Delete</button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n     id:PropTypes.string,\r\n     name: PropTypes.string.isRequired,\r\n     number: PropTypes.string.isRequired,\r\n     update:PropTypes.bool.isRequired,\r\n     onRemove:PropTypes.func.isRequired,\r\n     onUpdate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport styles from './Form.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactList = ({contacts,onRemoveContact,onUpdateContact})=>(\r\n  <ul className = {styles.list}>\r\n  {contacts.map(({id,name,number,update})=>(\r\n    <ContactListItem\r\n    key={id}\r\n    name={name}\r\n    number = {number}\r\n    update= {update}\r\n    onRemove={()=>onRemoveContact(id)}\r\n    onUpdate={()=>onUpdateContact(id)}/>\r\n  ))}\r\n</ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n     id:PropTypes.string.isRequired,\r\n     name: PropTypes.string.isRequired,\r\n     number: PropTypes.string.isRequired,\r\n     update:PropTypes.bool.isRequired,\r\n  }),).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  onUpdateContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Filter({value, onChangeFilter}){\r\n  return (\r\n    <div>\r\n    <p>Find contacts by name</p>\r\n    <input type = \"text\"\r\n    value = {value}\r\n    onChange={e=>onChangeFilter(e.target.value)}/>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value:PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};","import React, {Component} from 'react';\r\nimport styles from './Form.module.css';\r\n\r\nexport default class ContactForm extends Component{\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  handleChange=e=>{\r\n    const {name,value} = e.target;\r\n    this.setState({[name]: value})\r\n  };\r\n\r\n  handleSubmit=e=>{\r\n    e.preventDefault();\r\n    this.props.onAddContact(this.state.name, this.state.number)\r\n    this.setState({name: \"\", number:\"\"});\r\n  };\r\n\r\n  render(){\r\n    const {name,number} =this.state;\r\n    const checkName = !name + !number;\r\n\r\n\r\n    return(\r\n    <form onSubmit = {this.handleSubmit} className={styles.form}>\r\n\r\n      <label htmlFor=\"text\" className={styles.label}>Name</label><br/>\r\n      <input value={name}\r\n      type=\"text\"\r\n      onChange={this.handleChange}\r\n      id=\"text\"\r\n      name = \"name\"\r\n      className={styles.input}\r\n      />\r\n      <br/>\r\n\r\n      <label htmlFor=\"number\">Number</label><br/>\r\n      <input value={number}\r\n      type=\"tel\"\r\n      onChange={this.handleChange}\r\n      id=\"number\"\r\n      name = \"number\"\r\n      className={styles.input}\r\n\r\n      />\r\n      <br/>\r\n\r\n    <button type=\"submit\" className = {styles.formButton}  disabled={checkName}>Add contact</button>\r\n  </form>\r\n    )}\r\n}","import React, {Component} from 'react';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport ContactForm from './ContactForm';\nimport styles from './Form.module.css';\nconst { v4: uuidv4 } = require('uuid');\n\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', update: false},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12',update: false},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79',update: false},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26',update: false},\n    ],\n    filter:\"\",\n  };\n\n  componentDidMount(){\n\n    const previousContacts = localStorage.getItem('contacts');\n\n    if(previousContacts){\n      this.setState({\n        contacts: JSON.parse(previousContacts)\n      })\n    }\n\n  }\n\n  componentDidUpdate(prevProps, prevState){\n\n    if(prevState.contacts !== this.state.contacts){\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  addContact=(name,number)=>{\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n      update: false\n    };\n\n    const namesArr = this.state.contacts.map(item=>item.name);\n\n      namesArr.find(name =>name.toLowerCase() === contact.name.toLowerCase()) ?\n        alert(`${name} is already in the list`) :\n\n        this.setState(prevState=>{\n          return {\n            contacts: [...prevState.contacts, contact]\n          };\n    });\n  };\n\n  changeFilter=filter=>{\n    this.setState({filter})\n  };\n\n  getVisibleContacts=()=>{\n    const {contacts,filter} = this.state;\n\n    return contacts.filter(contact=>\n    contact.name.toLowerCase().includes(filter.toLowerCase()))\n  };\n\n  removeContact=idContact=>{\n    this.setState(prevState=>{\n      return {\n        contacts: prevState.contacts.filter(({id})=> id !== idContact)\n      }\n    })\n  };\n\n  updateContact = idContact=>{\n    this.setState(prevState=>{\n     return {\n       contacts: prevState.contacts.map(contact=>{\n         return contact.id === idContact ?\n         {...contact, update: !contact.update} : contact\n       })\n     }\n    });\n\n  };\n\n\n  render(){\n    const {filter} = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return(\n      <div className = {styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onAddContact = {this.addContact}/>\n\n        <h2>Contacts</h2>\n\n        <Filter value={filter} onChangeFilter = {this.changeFilter}/>\n\n        {visibleContacts.length >0 && (\n          <ContactList contacts = {visibleContacts} onRemoveContact = {this.removeContact}\n          onUpdateContact = {this.updateContact}/>\n        )}\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}